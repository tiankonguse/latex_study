`如果一个系统由 n 个变量和 m 个不等式组成，形如 Xj-Xi<=b*k（i，j 属于[1，n]，k 属于[1，m] ）， 这样的系统称之为差分约束系统。`

`差分约束系统通常用于求关于一组变量的不等式组。`

`求解差分约束系统可以转化为图论中单源最短路问题。`

`Xj-Xi<=k `
`==> d[v]-d[u]<=w[u,v] `
`==> 所以转化为图论求解 `

`也就是 if(d[v]-d[u] >w[u,v])那么 d[v]-d[u]<=w[u,v] 。 `
`路径距离初始化 dis[i]=INF`


`再增加一个源点 s，源点到所有定点的距离为 0`
`(添加源点的实质意义为默认另外一系列的不等式组 Xi-X0<=0）,再对源点利用 spfa 算法。`
 
` 注意几个问题：
` 1、当 0 没有被利用的时候，0 作为超级源点。当 0 已经被利用了，将 n+1（未被利用）置为超级源点。`
` 2、对于 Xj-Xi=k 可以转换为 Xj-Xi<=k Xj-Xi>=k 来处理。`
` 3、若要判断图中是否出现负环，可以利用深度优先搜索。`
 
` 以前利用 spfa 是这样的（head->****->tail），当 head 和 tail 之间所有点都遍历完了才轮得上 tail 这个点，这样的话我们无法判断图中有没有负环，我们可以这样改变一样遍历顺序，head->tail->***->head。 `

`当深度优先搜索过程中下次再次遇见 head（也就是head 节点依然在标记栈中）时，则可判断图中含有负环，否则没有。`

`4、当图连通时，只需要对源点 spfa 一次；当图不连通时，对每个定点 spfa 一次。`

`5、对于 Xj-Xi<k or Xj-Xi>k , 差分约束系统只针对>= or <=， 所以我们还要进行巧妙转换编程大于等于小于等于。`
